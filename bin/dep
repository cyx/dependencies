#! /usr/bin/env ruby

require "fileutils"
require "dependencies/dep"
require "thor"

class App < Thor
  def list(env = nil)
    deps.filter(env).each { |dep| puts dep }
    deps.require(env)
  end

  def vendor(name = nil)
    # method_options doesn't work here because the name argument is optional.

    flunk "No dependency given. Did you mean --all?" unless name

    if name == "--all"
      vendor_all
    else
      vendor_one(name)
    end
  end

protected

  def vendor_one(name)
    dep = dependency(name)  || flunk("Dependency #{name} not found in dependencies.")
    dep.url                 || flunk("Don't know where to vendor #{name} from (no URL given...)")

    FileUtils.mkdir("vendor") unless File.directory?("vendor")

    Dir.chdir("vendor") do
      system "git clone #{dep.url} #{dep.name} -q"
      Dir.chdir(dep.name) { FileUtils.rm_rf(".git") }
    end
  end

  def vendor_all
    prevent_exit do
      deps.each do |dep|
        vendor_one(dep.name)
      end
    end
  end

  def deps
    @deps ||= Dep.new(File.read("dependencies"))
  end

  def dependency(name)
    deps.find { |dep| dep.name == name }
  end

  def flunk(message)
    $stderr.puts(message)
    exit 1 unless @prevent_exit
  end

  def prevent_exit
    aux, @prevent_exit = @prevent_exit, false
    yield
  ensure
    @prevent_exit = aux
  end
end

App.start
